/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.6                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //


application     icoBoilingFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         0.06;

deltaT          1e-10;

writeControl    adjustableRunTime;

writeInterval   0.005;

purgeWrite      5000;

writeFormat     ascii;

writePrecision  12;

writeCompression off;

timeFormat      general;

timePrecision   10;

runTimeModifiable yes;

adjustTimeStep  yes;

maxCo           0.05;
maxDi           1000000;
maxAlphaCo      0.1;
maxDeltaT       7e-6;
maxCapillaryNum 0.5;

/*libs
(
    "libpostProcess.so"
);
*/

functions
{
     probes
    {
        type            probes;
        libs            (sampling);

        // Name of the directory for probe data
        name            probes;

        // Write at same frequency as fields
        writeControl    timeStep;
        writeInterval   50;

        // Fields to be probed
        region 	  fluid;
        fields          (p U);

        // Optional: interpolation scheme to use (default is cell)
        interpolationScheme cell;

        probeLocations
        (
            (0.000105 0 5e-5)
            (0.000105 0.000075 5e-5)
            (0.000105 0.00015 5e-5)           
            
            (0.0097452 0.000075 5e-5)
             (0.0097452 0.00015 5e-5)
             
            
        );
    }
    Tave_piastra{

   type surfaceFieldValue;
         libs ("libfieldFunctionObjects.so");
         writeControl    timeStep;
         writeInterval   200;
         writeFields     no;
         surfaceFormat   vtk;
         fields          (T);
         regionType      patch;
         region 	  fluid;
         name            heater;
         operation       areaAverage;

   }
   
   volFieldValue1
{
    // Mandatory entries (unmodifiable)
    type            volFieldValue;
    libs            (fieldFunctionObjects);

    // Mandatory entries (runtime modifiable)
    fields          (T);
    operation       average;
    regionType      all;
    name            fluid;

    // Optional entries (runtime modifiable)
    postOperation   none;
    weightField     alpha1;

    // Optional (inherited) entries
    writeFields     false;
    scalingFactor   1.0;
    writePrecision  8;
    writeToFile     true;
    useUserTime     true;
    region          fluid;
    enabled         true;
    log             true;
    timeStart       0;
    timeEnd         1000;
    executeControl  timeStep;
    executeInterval 1;
    writeControl    timeStep;
    writeInterval   200;
}

     postData
    {
        // Mandatory entries (unmodifiable)
        type           postBoiling;
        libs           ("boilingFunctionObject");
        active           yes;
        region           fluid;

        alphaName   alpha.liquid;

        //- Patches were relevant quantities are computed
        patches ( heater Pin.0_2 pin.0_18  pin.0_25 pin.0_45 pin.0_62 pin.0_83 pin.0_106);

        //- Saturation temperature
        Tsat    305.15;

        //- Reference length;
        Lr  0.0001;
        
        splitPatch  false;
        splitVector (4e-4 0 0);
        writeControl    timeStep;
         writeInterval   200;
    }
    
   pinl
    {
       type           surfaceFieldValue;//surfaceRegion;
       libs ("libfieldFunctionObjects.so");
  
        enabled         true;
	writeControl    timeStep; 
	writeInterval   200;
        log             false;
        writeFields     false;
	writeArea       false;
        surfaceFormat   none;
        regionType      sampledSurface;
        region            fluid;
        name      Mean;

	sampledSurfaceDict
         {
               type        plane;
               planeType pointAndNormal;
               pointAndNormalDict
               {
	       point   (0.0002425 0 0);
	       normal (1 0 0);
	       }
	 }
          operation       areaAverage;
          fields
          (
	     p
          );
      }
      
      pout
    {
       type           surfaceFieldValue;//surfaceRegion;
       libs ("libfieldFunctionObjects.so");
  
        enabled         true;
	writeControl    timeStep; 
	writeInterval   200;
        log             false;
        writeFields     false;
	writeArea       false;
        surfaceFormat   none;
        regionType      sampledSurface;
        region            fluid;
        name      Mean;

	sampledSurfaceDict
         {
               type        plane;
               planeType pointAndNormal;
               pointAndNormalDict
               {
	       point   (0.0097452 0 0);
	       normal (1 0 0);
	       }
	 }
          operation       areaAverage;
          fields
          (
	     p
          );
      }
      
      Uinl
    {
       type           surfaceFieldValue;//surfaceRegion;
       libs ("libfieldFunctionObjects.so");
  
        enabled         true;
	writeControl    timeStep; 
	writeInterval   200;
        log             false;
        writeFields     false;
	writeArea       false;
        surfaceFormat   none;
        regionType      sampledSurface;
        region            fluid;
        name      Mean;

	sampledSurfaceDict
         {
               type        plane;
               planeType pointAndNormal;
               pointAndNormalDict
               {
	       point   (0.0002425 0 0);
	       normal (1 0 0);
	       }
	 }
          operation       areaAverage;
          fields
          (
	     U
          );
      }
      
      Uout
    {
       type           surfaceFieldValue;//surfaceRegion;
       libs ("libfieldFunctionObjects.so");
  
        enabled         true;
	writeControl    timeStep; 
	writeInterval   200;
        log             false;
        writeFields     false;
	writeArea       false;
        surfaceFormat   none;
        regionType      sampledSurface;
        region            fluid;
        name      Mean;

	sampledSurfaceDict
         {
               type        plane;
               planeType pointAndNormal;
               pointAndNormalDict
               {
	       point   (0.0097452 0 0);
	       normal (1 0 0);
	       }
	 }
          operation       areaAverage;
          fields
          (
	     U
          );
      }

   
};


// ************************************************************************* //
