/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //



    solvers
{
	//Needed for implicit solve of alpha1 in phase change code
    "alpha.liquid.*"
    {
        nAlphaCorr      1;  //2; dambreak
        nAlphaSubCycles 2;  //1; dambreak
        cAlpha          1;
        alphaApplyPrevCorr no;
        MULESCorr       no;
        nLimiterIter    5;

        //isoAdvection            false;
        //reconstructionScheme    plicRDF;//plicRDF;
        //RDFStencil      4;


        solver          smoothSolver;
        smoother        symGaussSeidel;
        tolerance       1e-8;//-8
        relTol          0;
    };

    p_rgh
    {
        solver          GAMG;
        tolerance       1e-7;
        relTol          0.01;
        smoother        DICGaussSeidel;
        nPreSweeps      0;
        nPostSweeps     2;
        cacheAgglomeration true;
        agglomerator    faceAreaPair;
        mergeLevels     1;
        nCellsInCoarsestLevel 10;
    };

     p_rghFinal
    {
        solver          PCG;
        preconditioner
        {
            preconditioner  GAMG;

            tolerance       1e-8;
            relTol          0;

            nVcycles        2;

            smoother        DICGaussSeidel;
            nPreSweeps      0;
            nPostSweeps     2;
            nFinestSweeps   2;

            cacheAgglomeration true;
            nCellsInCoarsestLevel 10;
            agglomerator    faceAreaPair;
            mergeLevels     1;
        };
        tolerance       1e-9;
        relTol          0;
    };

    "pcorr.*"
    {
        $p_rgh;
        relTol          0;
    };


   "U.*"
    {
        solver          smoothSolver;
        smoother        symGaussSeidel;
        tolerance       1e-7;
        relTol          0;
    };
 /* 
   "T.*"
    {
        solver          smoothSolver;
        smoother        symGaussSeidel;
        tolerance       1e-7;
        relTol          0.0;
    }
*/

    "T.*"
    {   
        //solver          PBiCG;
        //preconditioner        DILU;
	solver PBiCGStab;
        preconditioner DILU; 
        tolerance       1e-10;
        relTol          0.0;
    }

    "mDot.*"
    {
        solver          PCG;
        preconditioner  DIC;
        tolerance       10;//tolerance       1e-10;
        relTol          10;//relTol          1e-3;
    }


}

PIMPLE
{
    momentumPredictor no;
    nCorrectors     3;
    nNonOrthogonalCorrectors 0;
    frozenFlow false;
    pRefPoint (0 0 0);
    pRefValue 1e5;
  

}

relaxationFactors
{
    "U.*"                      1;
    //"T.*"                      1;
}

    /*"alpha.bubble.*"
    {
        advectionScheme isoAdvection;//isoAdvection;
        reconstructionScheme plicRDF;//plicRDF; RDFadvect isoInverseDistance
        
        // isoAdvector parameters
        isoFaceTol      1e-6;
        surfCellTol     1e-6;
        nAlphaBounds    3;
        snapTol         1e-12;
        clip            true;
        gradAlphaNormal false;
        writeVTK        false;

        // MULES parameters
        nAlphaCorr      2;
        cAlpha          1;
        scAlpha         1;
        icAlpha         0;
        MULESCorr       yes;
        nLimiterIter    3;
        alphaApplyPrevCorr no;//yes;
        solver          smoothSolver;
        smoother        symGaussSeidel;
        tolerance       1e-8;
        relTol          0;
        minIter         1;

        // parameters read by both isoAdvector and MULES
        nAlphaSubCycles 1;
    }


    pcorr
    {
        solver          GAMG;
        smoother        DIC;
        tolerance       1e-10;
        relTol          0;
    }

    pcorrFinal
    {
        $pcorr;
        relTol          0;
    }

    p_rgh
    {
        solver          GAMG;
        smoother        DIC;
        tolerance       1e-07;
        relTol          0.001;
    }

    p_rghFinal
    {
        $p_rgh;
        tolerance       1e-8; Should be 1 to 2 orders of 
                                 magnitude smaller than 
                                 alpha.phase1.*.surfCellTol 
        relTol          0;
    }

    "(U|k|epsilon).*"
    {
        solver          smoothSolver;
        smoother        symGaussSeidel;
        tolerance       1e-07;
        relTol          0;
    }
}

PIMPLE
{
    momentumPredictor   no;
    nOuterCorrectors    1;
    nCorrectors         3;
    nNonOrthogonalCorrectors 2;
    pRefPoint            (30 0 0.065);
    pRefValue           0;
}
*/

// ************************************************************************* //
